{"version":3,"sources":["images/logo.svg","pages/Home.js","components/User.js","pages/Users.js","pages/UserDetails.js","routes.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","src","logo","alt","href","target","rel","Component","User","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","objectToCsv","bind","export","inherits","createClass","key","value","width","user","headers","keys","values","map","replace","csvRows","push","join","data","firstName","blob","Blob","type","encoding","url","window","URL","createObjectURL","newField","document","setAttribute","body","appendChild","click","removeChild","csvData","_this2","details","props","substring","style","divStyle","profileImage","id","lastName","email","Link","to","pathname","state","onClick","nameChangeHandler","userSelectHandler","exportCsv","React","Users","users","Data","selected","assertThisInitialized","detailsChangeHandler","userId","newDetails","setState","prevState","firstname","console","log","location","allUsers","components_User","UserDetails","_Component","hidden1","hidden2","view","changeDetailsHandler","changeViewHandler","UserData","hidden","ckeditor_default","editor","ClassicEditor","onInit","onChange","event","getData","routes","Route","exact","path","component","Home","src_routes","Boolean","hostname","match","ReactDOM","render","HashRouter","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a7f2228.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            TODO:\r\n\r\n            <ol className=\"text-left\">\r\n              <li className=\"text-left\">create component User which will display users's: profile image, first name, last name, email & details button (you can use Card view: https://getbootstrap.com/docs/4.0/components/card/)</li>\r\n              <li className=\"text-left\">retrieve data from data/users.json file and display User component for each user on this page</li>\r\n              <li className=\"text-left\">create new page: UserDetails</li>\r\n              <li className=\"text-left\">if visitor clicks on details button inside User component, redirect him/her to #/user/:userId details page and display all the data for the selected user (update routes.js file also!)</li>\r\n            </ol>\r\n\r\n\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nexport class User extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.objectToCsv = this.objectToCsv.bind();\r\n        this.export = this.export.bind();\r\n    }\r\n\r\n    divStyle(){\r\n        return {width: '18rem'};\r\n    };\r\n\r\n    objectToCsv(user) {\r\n\r\n        let headers = Object.keys(user);\r\n        let values = Object.values(user);\r\n        values = values.map(value => value.replace(/<\\/?[^>]+(>|$)/g, \"\").replace(/\"/g, '\"\"'));\r\n        const csvRows = [];\r\n        csvRows.push('\"' + headers.join('\",\"') + '\"');\r\n        csvRows.push('\"' + values.join('\",\"') + '\"');\r\n        return \"sep=,\\n\"  + csvRows.join(\"\\n\");\r\n\r\n    }\r\n\r\n    export(data, firstName){\r\n\r\n        const blob = new Blob([data], { type: 'text/csv; charset=UTF-8' , encoding: 'UTF-8'} );\r\n        const url = window.URL.createObjectURL(blob);\r\n        const newField = document.createElement('newField');\r\n        newField.setAttribute('download', firstName + \".csv\");\r\n        newField.setAttribute('hidden' , '');\r\n        newField.setAttribute('href' , url);\r\n        document.body.appendChild(newField);\r\n        newField.click();\r\n        document.body.removeChild(newField);\r\n\r\n    }\r\n\r\n    exportCsv(user) {\r\n\r\n        const csvData = this.objectToCsv(user);\r\n        this.export(csvData, user.firstName);\r\n    }\r\n\r\n    render() {\r\n        let details = this.props.user.details;\r\n        details = details.substring(0, 200);\r\n        return (\r\n            <div className = \"card\" style = {this.divStyle()}>\r\n                <img className = \"card-img-top\" src = {this.props.user.profileImage} alt = \"Card cap\" />\r\n                <div className = \"card-body\">\r\n                    <h5 className = \"card-title\">User {this.props.user.id}</h5>\r\n                    <p className = \"card-text\">{this.props.user.firstName + ' ' + this.props.user.lastName }</p>\r\n                    <p className = \"card-text\">{this.props.user.email}</p>\r\n                    <p className = \"card-text\">{details}</p>\r\n                    <Link type=\"button\" className=\"btn btn-primary text-white\"  to={\r\n                        {\r\n                            pathname: '/userDetails',\r\n                            state: {\r\n                                user: this.props.user\r\n                            }\r\n                        }\r\n                    }>User details</Link>\r\n                    <button onClick={() => this.props.nameChangeHandler(this.props.user.id)} className=\"btn-primary\">Change name</button>\r\n                    <button onClick={() => this.props.userSelectHandler(this.props.user.firstName)} className=\"btn btn-primary text-white\">Select</button>\r\n                    <button onClick={() => (this.exportCsv(this.props.user))} className=\"btn btn-primary text-white\">Export as CSV</button>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\nimport Data from '../data/users.json'\r\nimport User from '../components/User'\r\n\r\nexport class Users extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            users: Data.users,\r\n            selected: \"\"\r\n        }\r\n        this.nameChangeHandler = this.nameChangeHandler.bind(this);\r\n        this.userSelectHandler = this.userSelectHandler.bind(this);\r\n        this.detailsChangeHandler = this.detailsChangeHandler.bind(this);\r\n    }\r\n\r\n    detailsChangeHandler(userId, newDetails) {\r\n\r\n        this.setState({\r\n            users: this.state.users.map(function (user) {\r\n\r\n                if (user.id === userId) {\r\n\r\n                    user.details = newDetails;\r\n                }\r\n                return user;\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    nameChangeHandler(id) {\r\n\r\n        this.setState(prevState => {\r\n            const updatedUsers = prevState.users.map(user =>{\r\n                if(user.id === id) {\r\n                    user.firstName = \"Peter\"\r\n                }\r\n                return user\r\n            })\r\n            return {\r\n                users: updatedUsers,\r\n                selected: prevState.selected\r\n            }\r\n        })\r\n    }\r\n\r\n    userSelectHandler(firstname) {\r\n        this.setState(prevState =>{\r\n            return {\r\n                users: prevState.users,\r\n                selected: firstname\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillMount(){\r\n        console.log(\"mounting users\");\r\n        console.log(this.props);\r\n\r\n        if(this.props.location.state != null) {\r\n            this.detailsChangeHandler(this.props.location.state.id, this.props.location.state.details);\r\n        }\r\n        console.log(\"finished mounting\");\r\n    }\r\n\r\n    render() {\r\n        const allUsers = this.state.users.map(user => <User key={user.id} user={user}\r\n        nameChangeHandler = {this.nameChangeHandler} userSelectHandler = {this.userSelectHandler} detailsChangeHandler = {this.detailsChangeHandler}\r\n        />);\r\n        console.log(\"users\");\r\n        console.log(this.props.location.state);\r\n        return (\r\n            <div>\r\n                <h3>Users:</h3>\r\n\r\n                <p>Selected user: {this.state.selected}</p>\r\n\r\n                <div className=\"users-list\">\r\n                    {allUsers}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users\r\n","import React, { Component } from 'react'\r\nimport UserData from \"../data/users\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nexport class UserDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            details: \"yo\",\r\n            id: -1,\r\n            hidden1: false,\r\n            hidden2: true,\r\n            view: false,\r\n        };\r\n        this.changeDetailsHandler = this.changeDetailsHandler.bind(this);\r\n        this.changeViewHandler = this.changeViewHandler.bind(this);\r\n    }\r\n\r\n\r\n    changeViewHandler(){\r\n        if(this.state.view == false){\r\n            this.setState(prevState => {\r\n                return {\r\n                    view: true\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            this.setState(prevState => {\r\n                return {\r\n                    view: false,\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    changeDetailsHandler(data, id) {\r\n        if(data != \"\") {\r\n            this.setState(prevState => {\r\n                return {\r\n                    details: data,\r\n                    id: id,\r\n                    hidden1: true,\r\n                    hidden2: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    divStyle(){\r\n        return {width: '18rem'};\r\n    };\r\n\r\n    render() {\r\n        let data = this.props.location.state;\r\n        let userId = data.user.id;\r\n        let details = \"\";\r\n        return (\r\n            <div>\r\n                {UserData.users.map(function(user) {\r\n                    if(user.id === userId){\r\n                        console.log(\"UserDetails\");\r\n                        console.log(this.props);\r\n                        return (\r\n                            <div className=\"card\" style={this.divStyle()}>\r\n                                <img className=\"card-img-top\" src={user.profileImage} alt=\"Card cap\" />\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">User {user.id}</h5>\r\n                                    <p className=\"card-text\">{user.firstName + ' ' + user.lastName }</p>\r\n                                    <p className=\"card-text\">{user.email}</p>\r\n                                    <p className=\"card-text\" hidden={this.state.hidden1}>{user.details}</p>\r\n                                    <p className=\"card-text\" hidden={this.state.hidden2}>{this.state.details}</p>\r\n                                    <Link to={\r\n                                        {\r\n                                            pathname: '/',\r\n                                            state: {\r\n                                                details: this.state.details,\r\n                                                id: this.state.id\r\n                                            }\r\n                                        }\r\n                                    }>\r\n                                        Go back\r\n                                        </Link>\r\n                                    {this.state.view ?\r\n                                    < CKEditor\r\n                                        editor={ClassicEditor}\r\n                                        data=\"<p>Input text here</p>\"\r\n                                        onInit={editor => {\r\n                                        // You can store the \"editor\" and use when it is needed.\r\n                                    }}\r\n                                        onChange={( event, editor ) => {\r\n                                        details = editor.getData();\r\n                                        details = details.replace(/<\\/?[^>]+>/ig, \" \");\r\n                                        console.log(details);\r\n                                        //console.log(this.state.details);\r\n                                    }}\r\n                                        />\r\n                                        : null\r\n                                    }\r\n                                    <button onClick={() => this.changeDetailsHandler(details, userId)} hidden={!this.state.view} className=\"btn btn-primary\">Select</button>\r\n                                    <p><button onClick={() => this.changeViewHandler()} hidden={this.state.view} className=\"btn btn-primary\">Edit</button></p>\r\n                                    <p><button onClick={() => this.changeViewHandler()} hidden={!this.state.view} className=\"btn btn-primary\">View</button></p>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n\r\n                }.bind(this))}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserDetails\r\n","import React from 'react'\r\nimport {Switch, Route, Redirect, BrowserRouter as Router} from 'react-router-dom'\r\nimport Home from './pages/Home'\r\nimport Users from './pages/Users'\r\nimport UserDetails from './pages/UserDetails'\r\n\r\n\r\nconst routes = () => (\r\n    <main>\r\n        <Route exact path='/' component={Users}/>\r\n        <Route exact path='/home' component={Home}/>\r\n        <Route exact path='/user/:userId' component={UserDetails}/>\r\n        <Route exact path='/userDetails' component={UserDetails}/>\r\n\r\n    </main>\r\n)\r\nexport default routes\r\n","import React from 'react'\r\nimport Routes from '../routes'\r\n\r\nconst App = () => (\r\n    <div>\r\n        <Routes />\r\n    </div>\r\n)\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/main.css';\r\nimport App from './components/App';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n        <App/>\r\n    </HashRouter>\r\n), document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}